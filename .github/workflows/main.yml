name: Build and Package Java App (No Maven)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Compile Java sources (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p out
          javac -d out $(find src -name "*.java")

      - name: Compile Java sources (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir out
          for /r src %f in (*.java) do javac -d out "%f"

      - name: Create manifest
        run: |
          echo "Main-Class: AutoKeyPresser" > manifest.txt

      - name: Package JAR
        run: jar cfm AutoKeyPresser.jar manifest.txt -C out .

      # ----- Linux packaging -----
      - name: Install jpackage dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 fakeroot rpm

      - name: Package as .AppImage (Linux)
        if: runner.os == 'Linux'
        run: |
          jpackage \
            --type app-image \
            --input . \
            --main-jar AutoKeyPresser.jar \
            --name AutoKeyPresser \
            --main-class AutoKeyPresser \
            --icon icons/icon.png \
            --dest dist
          mv dist/AutoKeyPresser dist/AutoKeyPresser.AppImage

      # ----- Windows packaging -----
      - name: Package as .exe (Windows)
        if: runner.os == 'Windows'
        run: |
          jpackage ^
            --type exe ^
            --input . ^
            --main-jar AutoKeyPresser.jar ^
            --name AutoKeyPresser ^
            --main-class AutoKeyPresser ^
            --icon icons/icon.ico ^
            --dest dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packaged-app-${{ matrix.os }}
          path: dist/**
